# -*- coding: utf-8 -*-
"""Colorim√©trie.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1rEKYEASmMxmkU1hNdBxrEFUcI4qarQwA
"""

import streamlit as st

import csv

@st.cache_data
def charger_couleurs(fichier):
    color_database = {}
    with open(fichier, encoding='utf-8') as f:
        reader = csv.reader(f)
        for row in reader:
            if not row or row[0].startswith("#") == False:
                continue
            hex_code = row[0].strip()
            profil = tuple(row[1].strip().lower() for row in row[1:4])
            color_database[hex_code] = profil
    return color_database

# Charger les donn√©es
color_database = charger_couleurs("couleurs.txt")

st.title("üé® Outil de Colorim√©trie")

st.markdown("Entrez les **trois adjectifs** qui qualifient la personne, **dans l‚Äôordre exact**.")

adj1 = st.text_input("Premier adjectif").strip().lower()
adj2 = st.text_input("Deuxi√®me adjectif").strip().lower()
adj3 = st.text_input("Troisi√®me adjectif").strip().lower()

if adj1 and adj2 and adj3:
    profil = (adj1, adj2, adj3)
    resultats = [code for code, attribs in color_database.items() if attribs == profil]

    if resultats:
        from fpdf import FPDF
        import io

        def generate_pdf(profile, couleurs):
            pdf = FPDF()
            pdf.add_page()
            pdf.set_font("Arial", size=14)
            pdf.cell(200, 10, txt=f"Profil colorim√©trique : {', '.join(profile)}", ln=True)
        
            pdf.ln(10)  # ligne vide
            for hex_code in couleurs:
                # Couleur de remplissage
                r = int(hex_code[1:3], 16)
                g = int(hex_code[3:5], 16)
                b = int(hex_code[5:7], 16)
                pdf.set_fill_color(r, g, b)
        
                # Rectangle + code couleur
                pdf.cell(20, 10, '', fill=True)
                pdf.cell(40, 10, hex_code, ln=True)
        
            return pdf.output(dest='S').encode('latin-1')
        
        # === Affichage dans l'app ===
        if resultats:
            st.success("Couleurs correspondantes :")
            for code in resultats:
                st.color_picker(label=code, value=code, key=code)
        
            # G√©n√©rer le PDF et bouton de t√©l√©chargement
            pdf_data = generate_pdf(profil, resultats)
            st.download_button(
                label="üìÑ T√©l√©charger la palette en PDF",
                data=pdf_data,
                file_name="palette_colorimetrie.pdf",
                mime="application/pdf"
            )

    else:
        st.warning("‚ùå Aucune couleur trouv√©e pour cette combinaison exacte.")
